<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.example</groupId>
        <artifactId>java-pro</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>hw07_product_service</artifactId>

    <properties>
        <!-- OpenAPI -->
        <openapi-spec>
            ${project.basedir}/src/main/resources/api/product-service-rest-v1.yaml
        </openapi-spec>
        <openapi-generator-maven-plugin.version>7.3.0</openapi-generator-maven-plugin.version>
        <find-and-replace-maven-plugin.version>1.1.0</find-and-replace-maven-plugin.version>

        <!-- Tests -->
        <testcontainers.version>1.19.8</testcontainers.version>
        <rest-assured.version>5.4.0</rest-assured.version>

        <!-- Swagger -->
        <springdoc.version>2.5.0</springdoc.version>

        <!-- Other -->
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <lombok.version>1.18.30</lombok.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <annotations.version>3.0.1u2</annotations.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- DB -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <!-- Swagger -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-common</artifactId>
            <version>${springdoc.version}</version>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assured.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Other -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <!--
            Зависимость решает проблему с непонятной ошибкой
            Cannot find annotation method 'when()' in type 'javax.annotation.Nonnull': class file for javax.annotation.Nonnull not found
        -->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>${annotations.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <release>${maven.compiler.target}</release>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                                <path>
                                    <groupId>org.mapstruct</groupId>
                                    <artifactId>mapstruct-processor</artifactId>
                                    <version>${mapstruct.version}</version>
                                </path>
                                <dependency>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok-mapstruct-binding</artifactId>
                                    <version>${lombok-mapstruct-binding.version}</version>
                                </dependency>
                            </annotationProcessorPaths>
                            <failOnWarning>true</failOnWarning>
                            <compilerArgs>
                                <arg>-Xlint:all,-unchecked,-serial,-processing</arg>
                                <arg>-Amapstruct.defaultComponentModel=spring</arg>
                                <arg>-Amapstruct.unmappedSourcePolicy=error</arg>
                                <arg>-Amapstruct.unmappedTargetPolicy=error</arg>
                                <arg>-Amapstruct.defaultInjectionStrategy=constructor</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi-generator-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${openapi-spec}</inputSpec>
                            <generatorName>spring</generatorName>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <apiPackage>org.example.product_service.api</apiPackage>
                            <modelPackage>org.example.product_service.dao.model.generated</modelPackage>
                            <output>${project.build.directory}/generated-sources/main/java</output>
                            <configOptions>
                                <useSpringBoot3>true</useSpringBoot3>
                                <useTags>true</useTags>
                                <interfaceOnly>true</interfaceOnly>
                                <delegatePattern>true</delegatePattern>
                                <dateLibrary>java8-localdatetime</dateLibrary>
                                <openApiNullable>false</openApiNullable>
                                <generatedConstructorWithRequiredArgs>false</generatedConstructorWithRequiredArgs>
                                <serializableModel>true</serializableModel>
                                <serializationLibrary>jackson</serializationLibrary>
                                <additionalModelTypeAnnotations>
                                    @lombok.Builder
                                    @lombok.NoArgsConstructor
                                    @lombok.AllArgsConstructor
                                    @com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)
                                </additionalModelTypeAnnotations>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
                При использовании JDK17, @Lombok.Builder и аннотированных типах в списках (так в частности делает openapi generator)
                возникает ошибка компиляции java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 0
                https://github.com/projectlombok/lombok/issues/2434
                Ошибка устранена в более поздних версиях JDK.
                У нас для решения проблемы используем плагин, чтобы удалить аннотации из списков автоматически сгенерированных объектов.

                @see https://github.com/floverfelt/find-and-replace-maven-plugin
            -->
            <plugin>
                <groupId>io.github.floverfelt</groupId>
                <artifactId>find-and-replace-maven-plugin</artifactId>
                <version>${find-and-replace-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>valid</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>find-and-replace</goal>
                        </goals>
                        <configuration>
                            <!--
                                Possible replacementType values: file-contents, filenames, directory-names.
                                To run for multiple types, pass the values as a CSV list.
                            -->
                            <replacementType>file-contents</replacementType>
                            <baseDir>
                                target/generated-sources/main/java/src/main/java/org/example/product_service/dao/model/generated
                            </baseDir>
                            <findRegex><![CDATA[List<@Valid\s]]></findRegex>
                            <replaceValue><![CDATA[List<]]></replaceValue>
                            <recursive>true</recursive>
                        </configuration>
                    </execution>
                    <execution>
                        <id>size</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>find-and-replace</goal>
                        </goals>
                        <configuration>
                            <!--
                                Possible replacementType values: file-contents, filenames, directory-names.
                                To run for multiple types, pass the values as a CSV list.
                            -->
                            <replacementType>file-contents</replacementType>
                            <baseDir>
                                target/generated-sources/main/java/src/main/java/org/example/product_service/dao/model/generated
                            </baseDir>
                            <findRegex><![CDATA[List<@Size\(max = 255\)]]></findRegex>
                            <replaceValue><![CDATA[List<]]></replaceValue>
                            <recursive>true</recursive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
